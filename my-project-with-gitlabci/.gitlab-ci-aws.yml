image: docker:latest
services:
- docker:dind

stages:
- build
- deploy
variables:
  APP_NAME: my-app-gitlabci
  AWS_REGION: us-east-1
  KUBECONFIG_FILE: $K8S_CLUSTER_AWS_EKS

# Template to the docker build/push image
.job_build_template: &build_definition
  stage: build
  tags:
  - ci-shared
  before_script:
  - apk add --no-cache curl jq python3 py3-pip
  - pip install awscli
  - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com"
  script:
  - docker build -t ${ECR_REPOSITORY}:${CONTAINER_TAG} --build-arg APP_ENV=${CI_ENVIRONMENT_SLUG} .
  - docker tag "${ECR_REPOSITORY}:${CONTAINER_TAG}" "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:${CONTAINER_TAG}"
  - docker push "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:${CONTAINER_TAG}"

# Template to deploy K8S
.job_deploy_template: &deploy_definition
  stage: deploy
  image: alpine/helm:3.8.2
  tags:
  - ci-shared
  before_script:
  - apk add --no-cache aws-cli
  - aws eks --region $AWS_REGION update-kubeconfig --name $EKS_CLUSTER_NAME --kubeconfig $KUBECONFIG_FILE
  script:
  - helm upgrade ${RELEASE_NAME} ./k8s/${APP_NAME} --install --set image.repository=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY,image.tag=${CONTAINER_TAG} --namespace sl-${CI_ENVIRONMENT_SLUG} --kubeconfig ${KUBECONFIG_FILE}

# Execute to build/push image
build_to_testing:
  <<: *build_definition
  environment:
    name: testing
  variables:
    CONTAINER_TAG: ${CI_COMMIT_SHORT_SHA}
    ECR_REPOSITORY: danhnt/${APP_NAME}-${CI_ENVIRONMENT_SLUG}
  only:
  - development

build_to_staging:
  <<: *build_definition
  environment:
    name: staging
  variables:
    CONTAINER_TAG: ${CI_COMMIT_SHORT_SHA}
    ECR_REPOSITORY: danhnt/${APP_NAME}-${CI_ENVIRONMENT_SLUG}
  only:
  - master

build_to_production:
  <<: *build_definition
  environment:
    name: production
  variables:
    CONTAINER_TAG: ${CI_COMMIT_REF_NAME}
    ECR_REPOSITORY: danhnt/${APP_NAME}
  only:
  - tags

# Execute to deploy K8S
deploy_to_testing:
  <<: *deploy_definition
  environment:
    name: testing
  variables:
    CONTAINER_TAG: ${CI_COMMIT_SHORT_SHA}
    ECR_REPOSITORY: danhnt/${APP_NAME}-${CI_ENVIRONMENT_SLUG}
    RELEASE_NAME: ${APP_NAME}-${CI_ENVIRONMENT_SLUG}
  only:
  - development

deploy_to_staging:
  <<: *deploy_definition
  environment:
    name: staging
  variables:
    CONTAINER_TAG: ${CI_COMMIT_SHORT_SHA}
    ECR_REPOSITORY: danhnt/${APP_NAME}-${CI_ENVIRONMENT_SLUG}
    RELEASE_NAME: ${APP_NAME}-${CI_ENVIRONMENT_SLUG}
  only:
  - master

deploy_to_production:
  <<: *deploy_definition
  environment:
    name: production
  variables:
    CONTAINER_TAG: ${CI_COMMIT_REF_NAME}
    ECR_REPOSITORY: danhnt/${APP_NAME}
    RELEASE_NAME: ${APP_NAME}
  only:
  - tags
